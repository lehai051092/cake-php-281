version: '3.8'
services:
  nginx:
    image: lehai0510/nginx
    labels:
      - traefik.enable=true

      # HTTP traffic
      - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}.rule=Host(`${VIRTUAL_HOST}`)
      - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}.entrypoints=http
      - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}.service=nginx-${COMPOSE_PROJECT_NAME}
      - traefik.http.services.nginx-${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80

      # HTTPS traffic
      - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}-https.rule=Host(`${VIRTUAL_HOST}`)
      - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}-https.entrypoints=https
      - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}-https.service=nginx-${COMPOSE_PROJECT_NAME}-https
      - traefik.http.services.nginx-${COMPOSE_PROJECT_NAME}-https.loadbalancer.server.port=443
      - traefik.http.services.nginx-${COMPOSE_PROJECT_NAME}-https.loadbalancer.server.scheme=https

    networks:
      proxy:
      internal:
    environment:
      UID: ${UID:-1000}
      GID: ${GID:-1000}
      WORK_DIR: ${WORK_DIR}
      VIRTUAL_HOST: ${VIRTUAL_HOST}
    volumes:
      - ./nginx-sites.conf:/etc/nginx/templates/default.conf.template
      - ${WORK_DIR}:${WORK_DIR}:cached
    restart: &restart unless-stopped
    logging: &logging
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - php
  php:
    image: lehai0510/php-fpm:${PHP_VERSION}
    networks: &php-network
      - internal
      - mail
      - gateway
    environment: &php-env
      UID: ${UID:-1000}
      GID: ${GID:-1000}
      PHP_EXTENSIONS_ENABLE: ${PHP_EXTENSIONS_ENABLE}
    volumes: &php-volumes
      - ./php-custom.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      - ${WORK_DIR}:${WORK_DIR}:cached
      - ./smtp:/etc/msmtprc:ro
      - ${CA_STORE:-/usr/local/share/ca-certificates}:/usr/local/share/ca-certificates:ro
      - ~/.composer:/home/dev/.composer:delegated
      - ~/.ssh:/home/dev/.ssh:delegated
    extra_hosts: &php-extra-hosts
      - "host.docker.internal:host-gateway"
    external_links: &php-external-links
      - "proxy:${VIRTUAL_HOST}"
    restart: *restart
    logging: *logging
  cli:
    image: lehai0510/php-fpm:${PHP_VERSION}-cli
    networks: *php-network
    environment:
      <<: *php-env
      COMPOSER_VERSION: ${COMPOSER_VERSION}
    volumes: *php-volumes
    extra_hosts: *php-extra-hosts
    external_links: *php-external-links
    user: dev
    tty: true
    stdin_open: true
    init: true
    working_dir: ${WORK_DIR}
    restart: *restart
    logging: *logging
    hostname: cli-${COMPOSE_PROJECT_NAME}-docker
  db:
    image: mariadb:${MYSQL_VERSION}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - ./mysql.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - ./../data/mysql:/var/lib/mysql:delegated
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - internal
      - database
    restart: *restart
    logging: *logging
  elasticsearch:
    image: lehai0510/elasticsearch:${ELASTICSEARCH_VERSION}
    environment:
      - "ES_JAVA_OPTS=${ES_JAVA_OPTS:--Xms512m -Xmx512m}"
      - node.name=${COMPOSE_PROJECT_NAME}
      - cluster.routing.allocation.disk.watermark.low=2gb
      - cluster.routing.allocation.disk.watermark.high=1gb
      - cluster.routing.allocation.disk.watermark.flood_stage=512mb
      - cluster.info.update.interval=1m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - internal
    init: true
    restart: *restart
    logging: *logging
  adminer:
    image: lehai0510/adminer
    labels:
      - traefik.enable=true
      - traefik.http.routers.adminer-${COMPOSE_PROJECT_NAME}.rule=Host(`${VIRTUAL_HOST}`) && PathPrefix(`/adminer/`)
      - traefik.http.routers.adminer-${COMPOSE_PROJECT_NAME}.entrypoints=http
      - traefik.http.routers.adminer-${COMPOSE_PROJECT_NAME}.middlewares=adminer-stripprefix@file
      - traefik.http.routers.adminer-${COMPOSE_PROJECT_NAME}-https.rule=Host(`${VIRTUAL_HOST}`) && PathPrefix(`/adminer/`)
      - traefik.http.routers.adminer-${COMPOSE_PROJECT_NAME}-https.entrypoints=https
      - traefik.http.routers.adminer-${COMPOSE_PROJECT_NAME}-https.middlewares=adminer-stripprefix@file
      - traefik.http.services.adminer-${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=8080
    environment:
      ADMINER_PLUGINS: tables-filter json-column table-indexes-structure
      ADMINER_DEFAULT_USERNAME: ${MYSQL_USER}
      ADMINER_DEFAULT_PASSWORD: ${MYSQL_PASSWORD}
      ADMINER_DEFAULT_DATABASE: ${MYSQL_DATABASE}
      ADMINER_DESIGN: "pappu687"
    networks:
      - proxy
      - internal
    restart: *restart
    logging: *logging
  cron:
    image: lehai0510/crontab
    environment:
      - CRONTAB_PROJECT=${COMPOSE_PROJECT_NAME}
    networks:
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./cron.json:/opt/crontab/config.json
    restart: *restart
    logging: *logging
    depends_on:
      - cli
  redis:
    image: redis:${REDIS_VERSION}
    command: redis-server ${REDIS_CONFIG}
    networks:
      - internal
    volumes:
      - redis_data:/data
    restart: *restart
    logging: *logging
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}-management-alpine
    labels:
      - traefik.enable=true
      - traefik.http.routers.rabbitmq-${COMPOSE_PROJECT_NAME}.rule=Host(`${VIRTUAL_HOST}`) && PathPrefix(`/rabbitmq/`)
      - traefik.http.routers.rabbitmq-${COMPOSE_PROJECT_NAME}.entrypoints=http
      - traefik.http.routers.rabbitmq-${COMPOSE_PROJECT_NAME}.middlewares=rabbitmq-stripprefix@file
      - traefik.http.routers.rabbitmq-${COMPOSE_PROJECT_NAME}-https.rule=Host(`${VIRTUAL_HOST}`) && PathPrefix(`/rabbitmq/`)
      - traefik.http.routers.rabbitmq-${COMPOSE_PROJECT_NAME}-https.entrypoints=https
      - traefik.http.routers.rabbitmq-${COMPOSE_PROJECT_NAME}-https.middlewares=rabbitmq-stripprefix@file
      - traefik.http.services.rabbitmq-${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - proxy
      - internal
    restart: *restart
    logging: *logging
networks:
  proxy:
    external: true
  gateway:
    external: true
  database:
    external: true
  mail:
    external: true
  internal:
    driver: bridge
volumes:
  elasticsearch_data:
  redis_data:

